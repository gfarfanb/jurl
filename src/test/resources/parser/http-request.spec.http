
source src/test/resources/parser/http-request.part.http

@default-request=request

### [request] request: Request specification

mock field = discarded
mock @statusCode = 201
mock @responseContent = {}
mock Accept: application/json

token field = discarded
token @tokenUrl = http://localhost:5555/oauth/token
token @clientId = http-request-client-id
token @clientSecret = http-request-client-secret
token @scope = test
token @childKey = child-key
token @childSecret = child-secret

file field = discarded
file @path = src/test/resources/file.csv
file @mineType = text/csv

form identifier = {{UUID:}}

opt -s var1 value
opt -s var2 "string v a l u e"

# This is a comment
condition EQUALS_TO 1 1

POST http://localhost:5555/spec
&param=value

Content-Type: application/json

{
    "name": "test"
}

output basic.functions.id = {{HTTP/header.Resource-ID}}

assert EQUALS_TO 201 {{HTTP/status}}
assert com.legadi.cli.jurl.assertions.EqualsToAssertionFunction 201 {{HTTP/status}}
